@import "tailwindcss";
@import './information_page.css';
@import './tokens.css';

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  margin: 0;
  font-family: var(--font-sans);
  background: #030412;
  color: white;
  line-height: 1.6;
  overflow-x: hidden;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  cursor: none;
}

* {
  cursor: none !important;
}

/* Hero section: Full viewport width for WebGL/canvas rendering */
.hero-section {
  position: relative;
  width: 100vw;
  min-height: 100vh;
  margin: 0;
  padding: 0;
  overflow: hidden;
}

/* Hero inner wrapper for canvas + content layering */
.hero-inner {
  position: relative;
  width: 100%;
  height: 100%;
}

/* Canvas positioning (for both custom GL and iframe) */
.hero-section canvas,
.hero-section iframe {
  position: absolute;
  inset: 0;
  display: block;
  z-index: 1;
  background: transparent;
  width: 100%;
  height: 100%;
  border: 0;
  will-change: transform;
  transform: translateZ(0);
}

/* Hero content on top of canvas/iframe */
.hero-content {
  position: relative;
  z-index: 2;
}

/* Flowing background animations */
@keyframes flow {
  0%, 100% {
    transform: translateY(0) translateX(0);
  }
  50% {
    transform: translateY(-30px) translateX(20px);
  }
}

@keyframes float {
  0%, 100% {
    transform: translate(0, 0);
  }
  33% {
    transform: translate(30px, -30px);
  }
  66% {
    transform: translate(-20px, 20px);
  }
}

.flowing-shape-1 {
  animation: flow 20s ease-in-out infinite;
}

.flowing-shape-2 {
  animation: flow 25s ease-in-out infinite reverse;
}

.flowing-shape-3 {
  animation: flow 30s ease-in-out infinite;
}

.floating-circle-1 {
  animation: float 15s ease-in-out infinite;
}

.floating-circle-2 {
  animation: float 18s ease-in-out infinite reverse;
}

.floating-circle-3 {
  animation: float 22s ease-in-out infinite;
}

@media (prefers-reduced-motion: reduce) {
  .flowing-shape-1,
  .flowing-shape-2,
  .flowing-shape-3,
  .floating-circle-1,
  .floating-circle-2,
  .floating-circle-3 {
    animation: none;
  }
}

/* Typography */
h1, h2, h3 {
  font-weight: 600;
  line-height: 1.2;
}

h1 {
  font-size: clamp(32px, 6vw, 64px);
}

h2 {
  font-size: clamp(24px, 5vw, 48px);
}

h3 {
  font-size: clamp(20px, 4vw, 32px);
}

/* Hero token sizing */
.hero-token {
  font-size: clamp(28px, 5vw, 40px);
  font-weight: 600;
}

/* Tiles */
.tile {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 12px 20px;
  font-weight: 600;
  transition: all var(--duration-normal) var(--ease-out);
  cursor: default;
  user-select: none;
}

.tile.letter {
  min-width: 48px;
  height: 48px;
  padding: 12px;
}

.tile.letter.square {
  border-radius: var(--radius-tile);
}

.tile.letter.round {
  border-radius: 50%;
}

.tile.pill {
  border-radius: var(--radius-pill);
  padding: 12px 24px;
}

.tile.blue {
  background: var(--blue);
  color: #FFFFFF;
  box-shadow: 0 4px 12px var(--glow-blue);
}

.tile.orange {
  background: var(--orange);
  color: #FFFFFF;
  box-shadow: 0 4px 12px var(--glow-orange);
}

/* Scroll cue */
.scroll-cue {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 8px;
  color: #94a3b8;
  font-size: 14px;
  font-family: var(--font-mono);
  cursor: pointer;
  opacity: 0.7;
  transition: opacity var(--duration-normal) var(--ease-out);
}

.scroll-cue:hover {
  opacity: 1;
}

.scroll-cue svg {
  animation: bounce 2s infinite;
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-8px);
  }
  60% {
    transform: translateY(-4px);
  }
}

@media (prefers-reduced-motion: reduce) {
  .scroll-cue svg {
    animation: none;
  }
}

/* Bubbles - using hardcoded colors instead of tokens */
.bubble {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 10px 18px;
  border-radius: 20px;
  background: #0f172a;
  color: white;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  transition: all 0.2s var(--ease-out);
  white-space: nowrap;
}

.bubble:hover {
  background: var(--blue);
  color: white;
  border-color: var(--blue);
  box-shadow: 0 4px 16px var(--glow-blue);
  transform: translateY(-2px);
}

/* Section cards - using hardcoded colors */
.section-card {
  background: #0f172a;
  border-radius: var(--radius-tile);
  padding: var(--space-sm);
  border: 1px solid rgba(255, 255, 255, 0.08);
  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.06);
  margin-bottom: var(--space-sm);
}

.section-card h3 {
  color: var(--blue);
  margin-bottom: 8px;
}

.section-card .dates {
  color: #94a3b8;
  font-size: 14px;
  font-family: var(--font-mono);
  margin-bottom: 12px;
}

.section-card .org {
  color: white;
  font-weight: 500;
  margin-bottom: 8px;
}

.section-card ul {
  list-style: none;
  padding: 0;
  margin-top: 12px;
}

.section-card li {
  position: relative;
  padding-left: 20px;
  margin-bottom: 8px;
  color: #94a3b8;
  font-size: 15px;
}

.section-card li::before {
  content: 'â€¢';
  position: absolute;
  left: 0;
  color: var(--orange);
  font-weight: bold;
}

/* Utilities */
.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 var(--space-sm);
}

.section {
  min-height: 100vh;
  padding: var(--space-xl) 0;
}

/* Focus visible */
*:focus-visible {
  outline: 2px solid var(--blue);
  outline-offset: 4px;
}

/* Meteors animation */
@keyframes meteor {
  0% {
    transform: rotate(var(--angle)) translateX(0);
    opacity: 1;
  }
  70% {
    opacity: 1;
  }
  100% {
    transform: rotate(var(--angle)) translateX(-500px);
    opacity: 0;
  }
}

.animate-meteor {
  animation: meteor linear infinite;
}

@layer base {
  .theme {
    --animate-shimmer-slide: shimmer-slide var(--speed) ease-in-out infinite alternate;
    --animate-spin-around: spin-around calc(var(--speed) * 2) infinite linear;
    --animate-rippling: rippling var(--duration) ease-out;
    --animate-ripple: ripple var(--duration,2s) ease calc(var(--i, 0)*.2s) infinite;
    --animate-marquee: marquee var(--duration) infinite linear;
    --animate-marquee-vertical: marquee-vertical var(--duration) linear infinite;
  }
}

/* REMOVE THIS ENTIRE BLOCK - IT'S CAUSING THE ERROR
@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}
*/

@theme inline {
  @keyframes shimmer-slide {
    to {
      transform: translate(calc(100cqw - 100%), 0);
    }
  }
  @keyframes spin-around {
    0% {
      transform: translateZ(0) rotate(0);
    }
    15%, 35% {
      transform: translateZ(0) rotate(90deg);
    }
    65%, 85% {
      transform: translateZ(0) rotate(270deg);
    }
    100% {
      transform: translateZ(0) rotate(360deg);
    }
  }
  @keyframes rippling {
    0% {
      opacity: 1;
    }
    100% {
      transform: scale(2);
      opacity: 0;
    }
  }
  @keyframes ripple {
  0%, 100% {
    transform: translate(-50%, -50%) scale(1);
    }
  50% {
    transform: translate(-50%, -50%) scale(0.9);
    }
  }
  @keyframes marquee {
  from {
    transform: translateX(0);
    }
  to {
    transform: translateX(calc(-100% - var(--gap)));
    }
  }
  @keyframes marquee-vertical {
  from {
    transform: translateY(0);
    }
  to {
    transform: translateY(calc(-100% - var(--gap)));
    }
  }
  @keyframes marquee {
  from {
    transform: translateX(0);
    }
  to {
    transform: translateX(calc(-100% - var(--gap)));
    }
  }
  @keyframes marquee-vertical {
  from {
    transform: translateY(0);
    }
  to {
    transform: translateY(calc(-100% - var(--gap)));
    }
  }
}

/* Orbiting circles animations */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes reverse-spin {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}

@theme inline {
  --animate-ripple: ripple var(--duration, 2s) ease calc(var(--i, 0) * 0.2s) infinite;

  @keyframes ripple {
    0%, 100% {
      transform: translate(-50%, -50%) scale(1);
    }
    50% {
      transform: translate(-50%, -50%) scale(0.9);
    }
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}